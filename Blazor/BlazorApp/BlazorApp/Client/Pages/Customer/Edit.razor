@page "/customer/Edit/{Id:int}"
@using BlazorApp.Shared
@using System.Net.Http.Headers;
@using System.Text;
@inject HttpClient Http
@inject NavigationManager Navigate
<h3>Edit</h3>

<h1>Edit</h1>

<h4>Customer</h4>
<hr />

@if (customer == null)
{

    <p>
        <em>Loading...</em>
    </p>
}
else
{
    @if (!Saved)
    {

        <section class="employee-edit">
            <h1 class="page-title">Details for @customer.Name</h1>
            <EditForm Model="@customer" OnValidSubmit="@HandleValidSubmit"  OnInvalidSubmit="@HandleInvalidSubmit">
                <div class="form-group row">
                    <label for="Name" class="col-sm-3">Name: </label>
                    <InputText id="Name" class="form-control col-sm-8" @bind-Value="@customer.Name" placeholder="Enter  name"></InputText>
                </div>
                <button type="submit" class="btn btn-primary edit-btn" @onclick="update_Click">Save employee</button>
              
            </EditForm>
        </section>
    }
    else
    {
        <div class="alert @StatusClass">@Message</div>
    }
}

<div>
    <a asp-page="/customer/Index">Back to Customer List</a>
</div>



@code {
    protected string Message = string.Empty;  
    protected string StatusClass = string.Empty;  
    protected bool Saved;
    [Parameter]
    public int Id{ get; set; }
    [Parameter]
    public Customer? customer{ get; set; }
    protected override async Task OnInitializedAsync()
    {
        Saved = false;
        customer = await Http.GetFromJsonAsync<Customer>($"api/customer/GetById/{Id}");
    } 

    private async Task HandleValidSubmit()
    {
        await Task.CompletedTask;

    }
    private async Task HandleInvalidSubmit() { await Task.CompletedTask;  }
    private async Task update_Click()
    {
        using var res = await Http.PostAsJsonAsync($"api/customer/Update",customer);
        Message = await res.Content.ReadAsStringAsync();
        Saved = true;
        Navigate.NavigateTo("/customer/index");
    }
}