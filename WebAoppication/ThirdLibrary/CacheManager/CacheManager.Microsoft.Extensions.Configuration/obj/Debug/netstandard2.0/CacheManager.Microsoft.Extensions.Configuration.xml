<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CacheManager.Microsoft.Extensions.Configuration</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Configuration.MicrosoftConfigurationExtensions">
            <summary>
            Extensions for the Microsoft configuration framework to load <see cref="T:CacheManager.Core.CacheManagerConfiguration"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.MicrosoftConfigurationExtensions.GetCacheConfiguration(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Gets the first and only <see cref="T:CacheManager.Core.CacheManagerConfiguration"/> defined in
            the <code>cacheManagers</code> section of the provided <paramref name="configuration"/>.
            </summary>
            <param name="configuration">The source configuration.</param>
            <returns>The <c cref="T:CacheManager.Core.ICacheManagerConfiguration"/>.</returns>
            <exception cref="T:System.InvalidOperationException">If no cacheManagers section is defined or more than one manager is configured.</exception>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.MicrosoftConfigurationExtensions.GetCacheConfiguration(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Retrieve a <see cref="T:CacheManager.Core.CacheManagerConfiguration"/> defined in
            the <code>cacheManagers</code> section of the provided <paramref name="configuration"/> by <paramref name="name"/>.
            </summary>
            <returns>The <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/>.</returns>
            <param name="configuration">The source configuration.</param>
            <param name="name">The name of the cache.</param>
            <exception cref="T:System.ArgumentNullException">
            If either <paramref name="configuration"/> or <paramref name="name"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If no <code>cacheManagers</code> section is defined in the <paramref name="configuration"/>,
            or if no configuration was found for the <paramref name="name"/>.
            </exception>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.MicrosoftConfigurationExtensions.GetCacheConfigurations(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Retrieves all configured <see cref="T:CacheManager.Core.CacheManagerConfiguration"/>s defined in
            the <code>cacheManagers</code> section of the provided <paramref name="configuration"/>.
            </summary>
            <param name="configuration">The source configuration.</param>
            <returns>The list of <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/>s.</returns>
            <exception cref="T:System.InvalidOperationException">If no <code>cacheManagers</code> section is defined.</exception>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.MicrosoftConfigurationExtensions.LoadRedisConfigurations(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Loads all available Redis configurations from the the <code>redis</code> section of the provided <paramref name="configuration"/>.
            </summary>
            <remarks>
            This method always gets invoked by <see cref="M:Microsoft.Extensions.Configuration.MicrosoftConfigurationExtensions.GetCacheConfiguration(Microsoft.Extensions.Configuration.IConfiguration)"/> or the other overloads.
            You do not have to call this explicitly. The method also does not throw an exception if the <code>redis</code> section is
            not defined.
            </remarks>
            <param name="configuration">The source configuration.</param>
            <exception cref="T:System.InvalidOperationException">If the CacheManager.StackExchange.Redis package is not installed.</exception>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions to read cache manager configurations from ASP.NET Core configuration and add it to the DI framework.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCacheManagerConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{CacheManager.Core.ConfigurationBuilder},System.String)">
            <summary>
            Adds a new <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/> as singleton to the DI framework.
            </summary>
            <param name="collection">The services collection.</param>
            <param name="configure">The <see cref="T:CacheManager.Core.ConfigurationBuilder"/> used for defining the <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/>.</param>
            <param name="name">The (optional) name to be used for the <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/>.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCacheManagerConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Adds one <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/> as singleton to the DI framework reading it from <paramref name="fromConfiguration"/>.
            This overload will throw in case there are multiple cache manager configurations defined.
            </summary>
            <param name="collection">The services collection.</param>
            <param name="fromConfiguration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> section which contains a <c>cacheManagers</c> section.</param>
            <returns>The services collection</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCacheManagerConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Adds one named <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/> as singleton to the DI framework reading it from <paramref name="fromConfiguration"/>.
            </summary>
            <param name="collection">The services collection.</param>
            <param name="fromConfiguration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> section which contains a <c>cacheManagers</c> section.</param>
            <param name="name">The name used in the configuration.</param>
            <returns>The services collection</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCacheManagerConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.Action{CacheManager.Core.ConfigurationBuilder})">
            <summary>
            Adds one <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/> as singleton to the DI framework reading it from <paramref name="fromConfiguration"/>.
            This overload will throw in case there are multiple cache manager configurations defined.
            </summary>
            <param name="collection">The services collection.</param>
            <param name="fromConfiguration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> section which contains a <c>cacheManagers</c> section.</param>
            <param name="configure">Can be used to further configure the configuration.</param>
            <returns>The services collection</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCacheManagerConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Action{CacheManager.Core.ConfigurationBuilder})">
            <summary>
            Adds one named <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/> as singleton to the DI framework reading it from <paramref name="fromConfiguration"/>.
            </summary>
            <param name="collection">The services collection.</param>
            <param name="fromConfiguration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> section which contains a <c>cacheManagers</c> section.</param>
            <param name="name">The name used in the configuration.</param>
            <param name="configure">Can be used to further configure the configuration.</param>
            <returns>The services collection</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCacheManager(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds a singleton open generic service for <see cref="T:CacheManager.Core.ICacheManager`1"/> to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            <para>
            This requires one <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/> to be registered.
            </para>
            </summary>
            <remarks>
            With this setup, you can inject <see cref="T:CacheManager.Core.ICacheManager`1"/> with any kind ot <c>T</c> to your controllers and the DI framework will resolve a new singleton instance for each type.
            </remarks>
            <param name="collection">The services collection.</param>
            <returns>The services collection.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCacheManager``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Action{CacheManager.Core.ConfigurationBuilder})">
            <summary>
            Adds a singleton service for <see cref="T:CacheManager.Core.ICacheManager`1"/> for the specified <typeparamref name="T"/> to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            <para>
            This requires at least one <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/> to be registered. 
            If more than one <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/>s are registered, use <paramref name="configurationName"/> to specify which one to use.
            </para>
            </summary>
            <param name="collection">The services collection.</param>
            <param name="fromConfiguration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> section which contains a <c>cacheManagers</c> section.</param>
            <param name="configurationName">The name of the <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/> to use.</param>
            <param name="configure">Can be used to further configure the <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/>.</param>
            <returns>The services collection.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCacheManager``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{CacheManager.Core.ConfigurationBuilder},System.String)">
            <summary>
            Adds a singleton service for <see cref="T:CacheManager.Core.ICacheManager`1"/> for the specified <typeparamref name="T"/> to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 
            using the inline configuration defined by <paramref name="configure"/>.
            </summary>
            <param name="collection">The services collection.</param>
            <param name="configure">Used to configure the instance of <see cref="T:CacheManager.Core.ICacheManager`1"/>.</param>
            <param name="name">The (optional) name for the <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/>.</param>
            <returns>The services collection.</returns>
        </member>
    </members>
</doc>
